

callbacks
external_header="s3eGyroscope.h"
additional_linkage_name="s3eGyroscope"


include:

#include <s3eTypes.h>

 /*
  * Enum to represent the sensor delay. Values are represented in updates per second.
  *
  */
typedef enum s3eGyroscopeSensorDelay
{
	DELAY_FASTEST = 0,	///get sensor data as fast as possible
	
	DELAY_GAME = 1,		///sensor rate suitable for games 50 Hz
	
	DELAY_UI = 2, 		///rate suitable for the user interface 16Hz
	
	DELAY_NORMAL = 3,	///rate (default) suitable for screen orientation changes 6 Hz

}s3eGyroscopeSensorDelay;



 /*
  * Gyroscope specific error codes.
  */
typedef enum s3eGyroscopeResult
{
	S3E_GYROSCOPE_RESULT_OK=0,
	
	S3E_GYROSCOPE_NOT_AVAILABLE=1,
	
	S3E_GYROSCOPE_ALREADY_INITIALISED=2,
	 
	S3E_GYROSCOPE_NOT_RUNNING=3,

	S3E_GYROSCOPE_UNKNOWN_ERROR=4	

}s3eGyroscopeResult;



 /*
  *	Rotation values in Radians around the x, y, z axes. Rotation is positive in the counter-clockwise direction.
  *
  */
typedef struct s3eGyroscopeData
{
    float m_X; 
  
    float m_Y;
   
	float m_Z;

} s3eGyroscopeData;



 /*
  * Calback definition for data updates.
  */
typedef enum s3eGyroscopeCallback
{
    S3E_GYROSCOPE_CALLBACK_DATA_UPDATE =  0,
    
	S3E_GYROSCOPE_CALLBACK_MAX	
	
} s3eGyroscopeCallback;



functions:

 /*
  * The s3eGyroscopeStart function start the gyroscope sensor and sets the update frequency to its default value.
  *
  */
s3eGyroscopeResult s3eGyroscopeStart() S3E_GYROSCOPE_UNKNOWN_ERROR
 
 
 /*
  * This function can only be called after s3eGyroscopeStart has been called. Will return an error if called without start. 
  * Use the predifined s3eGyroscopeSensorDelay values to set the update frequency. 
  */
s3eGyroscopeResult s3eGyroscopeSetSensorDelay( s3eGyroscopeSensorDelay delay ) S3E_GYROSCOPE_UNKNOWN_ERROR


 /*
  * s3eGyroscopeStop will stop the data updates and turn of the sensor.
  */
s3eGyroscopeResult s3eGyroscopeStop() S3E_GYROSCOPE_UNKNOWN_ERROR

append:
/** @} */
